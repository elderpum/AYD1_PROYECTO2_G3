name: pipeline
on:
  push:
    branches: [develop, main]
jobs:
  #
  # BACKEND
  #
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - name: Install dependencies and build
        working-directory: backend
        run: |
          npm install
          npm run build --if-present
          echo "Se realizó BUILD ... ..."

  test:
    needs: build # Dependencia de la etapa anterior para realizar la ejecución de manera secuencial
    runs-on: ubuntu-latest
    env:
      API_PORT: ${{ secrets.API_PORT }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PORT: ${{ secrets.DB_PORT }}
      MAILER_EMAIL: ${{ secrets.MAILER_EMAIL }}
      MAILER_USER: ${{ secrets.MAILER_USER }}
      MAILER_PASSWORD: ${{ secrets.MAILER_PASSWORD }}
      S3_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
      S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
      JWT_SECRET_PW: ${{ secrets.JWT_SECRET_PW }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Run tests
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      #- name: Install dependencies and run tests
      #  working-directory: backend
      #  run: |
      #    npm install
      #    npm run test
  #
  # DOCKER
  #
  create-backend-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build the Docker image
        working-directory: backend
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/backend_ayd1 .
          echo "Se realizó BUILD ... ..."
      - name: Push the Docker image
        working-directory: backend
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/backend_ayd1
          echo "Se realizó PUSH ... ..."
  create-frontend-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build the Docker image
        working-directory: frontend
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend_ayd1 .
          echo "Se realizó BUILD ... ..."
      - name: Push the Docker image
        working-directory: frontend
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend_ayd1
          echo "Se realizó PUSH ... ..."
  deploy:
      runs-on: ubuntu-latest
      needs: [create-backend-image, create-frontend-image]
      steps:

        - name: Checkout code
          uses: actions/checkout@v2
    
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.S3_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.S3_SECRET_ACCESS_KEY }}
            aws-region: us-east-1
    
        - name: Login to Docker Hub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }} 
            password: ${{ secrets.DOCKERHUB_TOKEN }}
    
        - name: Deploy to EC2
          env:
            PRIVATE_KEY: ${{ secrets.EC2_KEY }}
            USER: ubuntu 
            HOST: ${{ secrets.AWS_EC2_HOST }}  
          run: |
            echo "$PRIVATE_KEY" > ec2ayd1.pem
            chmod 400 ec2ayd1.pem
           
            ssh -i "ec2ayd1.pem" ubuntu@ec2-18-222-231-240.us-east-2.compute.amazonaws.com
             sudo docker-compose up -d